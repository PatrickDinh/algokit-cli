name: Build, Test and Publish Pyinstaller Binaries

on:
  workflow_call:
    inputs:
      production_release:
        required: true
        type: string
      python_version:
        required: true
        type: string

jobs:
  build-binaries:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-14 is the Apple Silicon M1 runner
        os: [macos-latest, macos-14]
        include:
          - os: macos-latest
            build_command: "poetry run poe package_mac"
          - os: macos-14
            build_command: "poetry run poe package_mac"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ inputs.production_release == 'true' && '0' || '1' }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Set up Poetry
        uses: ./.github/actions/setup-poetry

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Install cert
        shell: bash
        if: runner.os == 'macOS'
        env:
          FILE: ${{ inputs.file }}
          OPTIONS: ${{ inputs.options }}
          APPLE_CERT_DATA: ${{ secrets.APPLE_CERT_DATA }}
          APPLE_CERT_PASSWORD: ${{ secrets.APPLE_CERT_PASSWORD }}
          APPLE_TEAM_ID: 7287T82947
        run: |
          # Setup
          SIGNFILE="$(pwd)/$FILE"

          # Throw error if file does not exist
          if [ ! -f "$SIGNFILE" ]; then
            echo "$SIGNFILE does not exist!"
            exit 5
          fi

          # Export certs
          echo "$APPLE_CERT_DATA" | base64 --decode > /tmp/certs.p12

          # Create keychain
          security create-keychain -p actions macos-build.keychain
          security default-keychain -s macos-build.keychain
          security unlock-keychain -p actions macos-build.keychain
          security set-keychain-settings -t 3600 -u macos-build.keychain

          # Import certs to keychain
          security import /tmp/certs.p12 -k ~/Library/Keychains/macos-build.keychain -P "$APPLE_CERT_PASSWORD" -T /usr/bin/codesign -T /usr/bin/productsign

          # Key signing
          security set-key-partition-list -S apple-tool:,apple: -s -k actions macos-build.keychain

          # Verify keychain things
          security find-identity -v macos-build.keychain | grep "$APPLE_TEAM_ID" | grep "Developer ID Application"
          security find-identity -v macos-build.keychain | grep "$APPLE_TEAM_ID" | grep "Developer ID Installer"

      - name: Build & test binary
        uses: ./.github/actions/build-binaries
        with:
          python_version: ${{ inputs.python_version }}
          package_name: "algokit"
          production_release: ${{ inputs.production_release }}
          operating_system: ${{ runner.os }}
          architecture: ${{ runner.arch }}
          build_command: ${{ matrix.build_command }}
